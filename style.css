
/*
 * TODO probably use a compile to css lang for readability and such
 * TODO probably use vars/ macros of some sort for font sizing
 */
:root {
    --bg-dark: #1b1a32;

    --header-dark: var(--bg-dark);
    --header-mid: darkgrey;
    --header-light: lightgrey;

    --text-gold: #e3be4d;
    --text-white: lightgrey;
    --text-red: #fd6462;
    --text-blue: #83c8e4;
    --text-green: #5cae03;

}

body {
    background-color: var(--header-dark);
    margin: 0;
    padding: 0;
}

header {
    height: 50px;
    position: fixed;
    width: 100%;
    background-color: var(--header-light);
}

header a {
    display: inline-block;
    box-sizing: border-box;
    height: 50px;
    padding: 13.5px 13.5px 0;

    text-decoration: none;
    text-transform: uppercase;
    font-family: sans-serif;
    font-size: 16px;
    color: inherit;
}

header span {
    display: inline-block;
}

header span.title {
    box-sizing: border-box;
    height: 50px;
    padding: 13.5px 13.5px 0;

    text-transform: uppercase;
    font-family: sans-serif;
    font-size: 16px;
    color: var(--text-gold);

    background-color: var(--bg-dark);
}

header span.active {
    background-color: var(--header-mid);
}

header span.nav-item:hover {
    background-color: var(--header-mid);
}

.main {
    margin-left: 320px;
    padding-top: 60px;
}

.relic-container {
    padding-right: 80px;
}

.relic-cat {
    padding: 32px 0 18px 0;
}

.relic-cat-name {
    color: var(--text-gold);
    font-size: larger;
}

.relic-cat-name::after {
    content: ":";
}

.relic-cat-desc {
    color: var(--text-white);
}

.relic-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(32px, 1fr));
    grid-gap: 10px;

    padding-top: 0.5em;
}

.relic-sidebar {
    display: none;
    color: var(--text-white);
}

.relic:hover .relic-sidebar {
    display: block;

    position: fixed;
    top: 50px;
    left: 0px;

    width: 300px;
    padding: 10px;
}

.relic {
    width: 32px;
    height: 32px;
}

.relic .ironclad-only::before {
    color: var(--text-red);
    content: 'This relic can only be acquired by the Ironclad!';
}

.relic .silent-only::before {
    color: var(--text-green);
    content: 'This relic can only be acquired by the Silent!';
}

.relic .defect-only::before {
    color: var(--text-blue);
    content: 'This relic can only be acquired by the Defect!';
}

.relic .relic-name {
    color: var(--text-gold);
    font-size: large;
}

.relic .relic-flavor {
    font-style: italic;
}

/* Relic highlighting */
.relic .hl-number {
    color: var(--text-blue);
}

.relic .hl-keyword {
    color: var(--text-gold);
}

.relic .hl-red {
    color: var(--text-red);
}

.relic .hl-green {
    color: var(--text-green);
}

/* Relic keywords */
/* TODO
 * Not sure if I'm going to keep this system because it cannot do highlighting within descriptions (by any method I'm aware of)
 * for instance, 'Evoked' in the description of Channel should be highlighted
 */
.relic .keyword-channel::before {
    content: 'Channel';
}
.relic .keyword-channel-desc::before {
    content: 'Channeling an Orb puts it into your first empty slot.  If you have no empty slots your first Orb is automatically Evoked to make room.';
}

.relic .keyword-lightning::before {
    content: 'Lightning';
}
.relic .keyword-lightning-desc::before {
    content: 'Orb: Deals damage to random enemies.';
}
